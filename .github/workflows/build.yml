name: Build and Release
run-name: ${{ github.actor }} is building Renamiq ðŸš€

on:
  push:
    branches: [ main, master ]

jobs:
  check-commit:
    runs-on: ubuntu-latest
    outputs:
      is_release: ${{ steps.check.outputs.is_release }}
      version: ${{ steps.check.outputs.version }}
      description: ${{ steps.check.outputs.description }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Check commit message
        id: check
        run: |
          # Get commit summary (first line)
          commit_summary=$(git log -1 --pretty=%s)
          # Get commit description (rest of the message)
          commit_description=$(git log -1 --pretty=%b)
          
          if [[ $commit_summary =~ ^release[[:space:]]v[0-9]+\.[0-9]+\.[0-9]+ ]]; then
            echo "is_release=true" >> $GITHUB_OUTPUT
            version=$(echo $commit_summary | grep -o "v[0-9]\+\.[0-9]\+\.[0-9]\+")
            echo "version=$version" >> $GITHUB_OUTPUT
            # Escape newlines and other special characters in description
            description="${commit_description//'%'/'%25'}"
            description="${description//$'\n'/'%0A'}"
            description="${description//$'\r'/'%0D'}"
            echo "description=$description" >> $GITHUB_OUTPUT
          else
            echo "is_release=false" >> $GITHUB_OUTPUT
            echo "version=" >> $GITHUB_OUTPUT
            echo "description=" >> $GITHUB_OUTPUT
          fi

  build:
    needs: check-commit
    if: needs.check-commit.outputs.is_release == 'true'
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci
        
      # Install required dependencies for Linux builds
      - name: Install Linux Dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            librsvg2-dev \
            patchelf

      - name: Build and Release Electron App
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          ELECTRON_BUILDER_MAINTAINER: "kyuguest <kyugeust@tuta.io>"
        run: npm run build

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-build
          path: |
            dist/*.exe
            dist/*.dmg
            dist/*.AppImage
            dist/*.deb
          if-no-files-found: ignore

  create-release:
    needs: [check-commit, build]
    if: needs.check-commit.outputs.is_release == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.check-commit.outputs.version }}
          name: Release ${{ needs.check-commit.outputs.version }}
          body: |
            ${{ needs.check-commit.outputs.description }}
          files: |
            artifacts/*.exe
            artifacts/*.dmg
            artifacts/*.AppImage
            artifacts/*.deb
          draft: false
          prerelease: false
          generate_release_notes: false